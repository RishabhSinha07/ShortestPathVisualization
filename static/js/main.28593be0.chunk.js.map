{"version":3,"sources":["source/Maze.js","index.js"],"names":["timeout","delay","Promise","res","setTimeout","generateInitialGrid","START_X","START_Y","END_X","END_Y","temp","i","j","push","Maze","useState","updateStart","setUpdateStart","updateEnd","setUpdateEnd","setSTART_X","setSTART_Y","setEND_X","setEND_Y","grids","setGrid","updateGrid","color","fill","a","map","grid","width","height","backgroundColor","animation","getDistance","b","c","d","Math","sqrt","pow","abs","className","onClick","e","console","log","target","id","split","parseInt","class","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","start_x","start_y","end_x","end_y","score","Number","MAX_VALUE","temp_x","temp_y","style","window","open","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28593be0.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport './maze.css';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\n\r\nfunction timeout(delay) {\r\n    return new Promise( res => setTimeout(res, delay) );\r\n}\r\n\r\nfunction generateInitialGrid(START_X, START_Y, END_X, END_Y) {\r\n    let temp = [];\r\n    let height=60,width=30;\r\n    for(let i=0;i<width;i++){\r\n        for(let j=0;j<height;j++){\r\n            if(i === START_X && j === START_Y){temp.push({'className':'square','backgroundColor':'green','width':i,'height':j,'animation':'linear','id':`${i}_${j}`})}\r\n            else if(i === END_X && j === END_Y){temp.push({'className':'square','backgroundColor':'red','width':i,'height':j,'animation':'linear','id':`${i}_${j}`})}\r\n            else{temp.push({'className':'square','backgroundColor':'LightGray','width':i,'height':j,'animation':'linear','id':`${i}_${j}`})}}}\r\n    return temp\r\n    }   \r\n\r\n\r\nfunction Maze() {\r\n\r\n    const [updateStart,setUpdateStart] = useState(false)\r\n    const [updateEnd,setUpdateEnd] = useState(false)\r\n    const [START_X,setSTART_X] = useState(0)\r\n    const [START_Y,setSTART_Y] = useState(0)\r\n    const [END_X,setEND_X] = useState(20)\r\n    const [END_Y,setEND_Y] = useState(50)\r\n    const [grids,setGrid] = useState(generateInitialGrid(START_X, START_Y, END_X, END_Y));\r\n    \r\n    \r\n    const _onMouseClick = (e) => {\r\n        console.log(updateStart,updateEnd)\r\n        console.log(e.target.id.split('_')[0],e.target.id.split('_')[1])\r\n        if(updateStart){\r\n            setSTART_X(parseInt(e.target.id.split('_')[0]));\r\n            setSTART_Y(parseInt(e.target.id.split('_')[1]));\r\n            setGrid(generateInitialGrid(parseInt(e.target.id.split('_')[0]), parseInt(e.target.id.split('_')[1]), END_X, END_Y));\r\n            setUpdateStart(false);\r\n        }\r\n        if(updateEnd){\r\n            setEND_X(parseInt(e.target.id.split('_')[0]));\r\n            setEND_Y(parseInt(e.target.id.split('_')[1]));\r\n            setGrid(generateInitialGrid(START_X, START_Y, parseInt(e.target.id.split('_')[0]), parseInt(e.target.id.split('_')[1])));\r\n            setUpdateEnd(false);\r\n        }\r\n    }\r\n\r\n    const updateStartPos = () => {setUpdateStart(true);}\r\n\r\n    const updateEndPos = () => {setUpdateEnd(true);}\r\n\r\n    const updateGrid = async(i,j,color,fill) => {\r\n        await timeout(0.001);\r\n        setGrid(grids => {return grids.map((grid) => {\r\n            if(grid.width === i && grid.height === j && grid.backgroundColor != 'green'){\r\n                grid.backgroundColor = color;\r\n                grid.animation = fill;\r\n            }\r\n            return grid;\r\n        })});}\r\n    \r\n    const getDistance = (a,b,c,d) => {return Math.sqrt(Math.pow(Math.abs(a-c),2) + Math.pow(Math.abs(b-d),2))}\r\n\r\n    const EuclideanShortestPath = () => {\r\n        let start_x = START_X, start_y = START_Y, end_x = END_X, end_y = END_Y\r\n        let score = Number.MAX_VALUE\r\n        while(start_x != end_x || start_y != end_y){\r\n            let temp_x = 0, temp_y = 0\r\n            if(start_x < 0 || start_x > 30 || start_y < 0 || start_y > 60){return}\r\n            if(getDistance(start_x,start_y,end_x,end_y) < score){\r\n                score = getDistance(start_x,start_y,end_x,end_y)\r\n                temp_x = start_x\r\n                temp_y = start_y\r\n                updateGrid(temp_x,temp_y,'#003399','linear')\r\n            }\r\n            else{\r\n                updateGrid(start_x,start_y,'red','fillSquareRejectedPath')\r\n            }\r\n            if(start_x+1 < 30 && getDistance(start_x+1,start_y,end_x,end_y) < score){\r\n                score = getDistance(start_x+1,start_y,end_x,end_y)\r\n                temp_x = start_x+1\r\n                temp_y = start_y\r\n                updateGrid(temp_x,temp_y,'#003399','linear')\r\n            }\r\n            else{\r\n                updateGrid(start_x+1,start_y,'red','fillSquareRejectedPath')\r\n            }\r\n            if(start_x-1 >= 0 && getDistance(start_x-1,start_y,end_x,end_y) < score){\r\n                score = getDistance(start_x-1,start_y,end_x,end_y)\r\n                temp_x = start_x-1\r\n                temp_y = start_y\r\n                updateGrid(temp_x,temp_y,'#003399','linear')\r\n            }\r\n            else{\r\n                updateGrid(start_x-1,start_y,'red','fillSquareRejectedPath')\r\n            }\r\n            if(start_y+1 < 60 &&getDistance(start_x,start_y+1,end_x,end_y) < score){\r\n                score = getDistance(start_x,start_y+1,end_x,end_y)\r\n                temp_x = start_x\r\n                temp_y = start_y+1\r\n                updateGrid(temp_x,temp_y,'#003399','linear')\r\n            }\r\n            else{\r\n                updateGrid(start_x,start_y+1,'red','fillSquareRejectedPath')\r\n            }\r\n            if(start_y-1 >= 0 && getDistance(start_x,start_y-1,end_x,end_y) < score){\r\n                score = getDistance(start_x,start_y-1,end_x,end_y)\r\n                temp_x = start_x\r\n                temp_y = start_y-1\r\n                updateGrid(temp_x,temp_y,'#003399','linear','fillSquareRejectedPath')\r\n            }\r\n            else{ \r\n                updateGrid(start_x,start_y-1,'red','fillSquareRejectedPath')\r\n            }\r\n            if(start_y-1 >= 0 && start_x-1 >= 0 && getDistance(start_x-1,start_y-1,end_x,end_y) < score){\r\n                score = getDistance(start_x-1,start_y-1,end_x,end_y)\r\n                temp_x = start_x-1\r\n                temp_y = start_y-1\r\n                updateGrid(temp_x,temp_y,'#003399','linear','fillSquareRejectedPath')\r\n            }\r\n            else{\r\n                updateGrid(start_x-1,start_y-1,'red','fillSquareRejectedPath')\r\n            }\r\n            if(start_y+1 < 60 && start_x+1 < 30 && getDistance(start_x+1,start_y+1,end_x,end_y) < score){\r\n                score = getDistance(start_x+1,start_y+1,end_x,end_y)\r\n                temp_x = start_x+1\r\n                temp_y = start_y+1\r\n                updateGrid(temp_x,temp_y,'#003399','linear')\r\n            }\r\n            else{\r\n                updateGrid(start_x+1,start_y+1,'red','fillSquareRejectedPath')\r\n            }\r\n            if(start_y-1 >= 0 && start_x+1 < 30 && getDistance(start_x+1,start_y-1,end_x,end_y) < score){\r\n                score = getDistance(start_x+1,start_y-1,end_x,end_y)\r\n                temp_x = start_x+1\r\n                temp_y = start_y-1\r\n                updateGrid(temp_x,temp_y,'#003399','linear')\r\n            }\r\n            else{\r\n                updateGrid(start_x+1,start_y-1,'red','fillSquareRejectedPath')\r\n            }\r\n            if(start_y+1 < 60 && start_x-1 >= 0 && getDistance(start_x-1,start_y+1,end_x,end_y) < score){\r\n                score = getDistance(start_x-1,start_y+1,end_x,end_y)\r\n                temp_x = start_x-1\r\n                temp_y = start_y+1\r\n                updateGrid(temp_x,temp_y,'#003399','linear')\r\n            }\r\n            else{\r\n                updateGrid(start_x-1,start_y+1,'red','fillSquareRejectedPath')\r\n            }\r\n            start_x = temp_x\r\n            start_y = temp_y\r\n            updateGrid(start_x,start_y,'green','fillSquareMainPath')\r\n            \r\n        }\r\n    };\r\n    \r\n    return (\r\n            <div className = 'maze' onClick={_onMouseClick}>\r\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <span class=\"navbar-text\">\r\n            Euclidean shortest path visulization \r\n            </span>\r\n            <div className='width'></div>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n            <button type=\"button\" className=\"btn btn-outline-success btn-sm\" onClick={updateStartPos}>Change Start</button>\r\n            </li>\r\n            <li class=\"nav-item active\">\r\n            <button type=\"button\" className=\"btn btn-outline-warning btn-sm\" onClick={updateEndPos}>Change Stop</button>\r\n            </li>\r\n            <li class=\"nav-item active\">\r\n            <button type=\"button\" className=\"btn btn-outline-dark btn-sm\" id='button' onClick={EuclideanShortestPath}>Find the shortest path</button>\r\n            </li>\r\n            </ul>\r\n            </div>\r\n            </nav>\r\n            <div className='grid'>\r\n            {grids.map((grid) => (\r\n            <div className={grid.className} id={grid.id}  style={{backgroundColor: `${grid.backgroundColor}`, '--x' : `${20*(grid.height+1)}px`,'--y': `${20*(grid.width+1)}px`, 'animation':`${grid.animation}  5s linear`}}></div>\r\n            ))}\r\n            </div>\r\n            <div className='footer'>\r\n            <span class=\"navbar-text\">\r\n                Created By : Rishabh Sinha\r\n            </span>\r\n            <LinkedInIcon className='icon' onClick={() => window.open('https://www.linkedin.com/in/rishabh-sinha-99a706164/')}/>\r\n            <InstagramIcon className='icon' onClick={() => window.open('https://www.instagram.com/rishabh_s1nha/')}/>\r\n            <GitHubIcon className='icon' onClick={() => window.open('https://github.com/RishabhSinha07')}/>\r\n            </div>\r\n            </div>\r\n            \r\n    );\r\n}\r\n\r\n\r\nexport default Maze;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Maze from './source/Maze'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Maze />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}